package ru.itmo.lesson26;

public class Main {
}


/*/
Написать многопоточные программы клиента и сервера.
Для передачи данных используйте классы ru.itmo.lessons.lesson25.common.Message и
ru.itmo.lessons.lesson25.common.ReadWrite из предыдущих занятий.

Клиент
Соединение с сервером устанавливается, когда запускается клиентская программа.
Соединение с сервером разрывается, если пользователь решил завершить работу программы или,
если сервер перестал отвечать.
Клиентская программа завершает работу по желанию пользователя (ввод exit в консоль).
Клиент в отдельном потоке получает данные от пользователя, создает экземпляр Message и
отправляет сообщение на сервер.
Клиент в отдельном потоке получает сообщения от сервера и выводит их в консоль.
Если сервер не отвечает, а пользователь не ввел "exit", текст, вводимый пользователем в
консоль, сохраняется в файл.
Сервер
Сервер не разрывает соединение с клиентом по своей инициативе.
Соединение с клиентом разрывается, если клиент перестал отвечать (можно реализовать разрыв
соединения по запросу клиента).
Сервер принимает сообщения от клиентов и рассылает их по всем активным соединениям.
Каждое соединение клиент-сервер должно обрабатываться в отдельном потоке.
Активные соединения можно хранить в коллекции
CopyOnWriteArraySet: import java.util.concurrent.CopyOnWriteArraySet;
 */
